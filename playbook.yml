- name: playbook
  hosts: host
  become: yes
  become_user: root
  become_method: sudo
  tasks:
    - name: update
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
          - nginx
          - nodejs
          - npm
        state: latest
        update_cache: true
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Clone repository
      git:
        repo: "https://github.com/sangnd1510/drf_test.git"
        dest: "/home/ubuntu/drf_test"
        update: yes

    - name: Install backend app
      ansible.builtin.command:
        cmd: docker compose up
      args:
        chdir: /home/ubuntu/drf_test/api 

    - name: install yarn package manager
        ansible.builtin.command:
        cmd: npm install --global yarn

    - name: build client app
      ansible.builtin.command:
        cmd: yarn run build
      args:
        chdir: /home/ubuntu/drf_test/client 
      
    - name: move build folder 
      ansible.builtin.command:
        cmd: mv * /var/www/client_app/html
      args:
        chdir: /home/ubuntu/drf_test/client/build
  
    - name: Configure Nginx
        template:
          src: "nginx.conf.j2"
          dest: "/etc/nginx/sites-available/your_app"
        notify:
          - Reload Nginx

    - name: Prune everything
      community.docker.docker_prune:
        containers: true
        images: true

  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded
          
  
      